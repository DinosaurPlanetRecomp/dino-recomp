name: build
on:
  workflow_dispatch:
    secrets:
      PRIVATE_REPO_PAT:
        required: true
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  # Linux (native)
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [ RelWithDebInfo ]
        os: [ ubuntu-latest ]
    name: ubuntu-latest (${{ matrix.type }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
          submodules: recursive
      - name: Checkout baserom
        uses: actions/checkout@v2
        with:
          repository: Francessco121/dino-recomp-private
          token: ${{ secrets.PRIVATE_REPO_PAT }}
          path: baserom
      - name: Extract baserom
        run: |
          unzip baserom/baserom.patched.z64.zip -d ./
      - name: Install apt packages
        run: sudo apt-get install cmake ninja-build libsdl2-dev libgtk-3-dev lld llvm clang
      - name: Build N64Recomp & RSPRecomp
        run: |
          cd lib/N64Recomp

          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_MAKE_PROGRAM=ninja -G Ninja -S . -B cmake-build
          cmake --build cmake-build --config Release --target N64RecompCLI -j $(nproc)
          cmake --build cmake-build --config Release --target RSPRecomp -j $(nproc)

          # Copy N64Recomp & RSPRecomp to root directory
          cp cmake-build/N64Recomp ../..
          cp cmake-build/RSPRecomp ../..
      - name: Run N64Recomp & RSPRecomp
        run: |
          ./N64Recomp dino.toml
          ./RSPRecomp aspMain.toml
      - name: Build DinoRecomp
        run: |-
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.type }} -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DCMAKE_MAKE_PROGRAM=ninja -G Ninja -S . -B cmake-build
          cmake --build cmake-build --config ${{ matrix.type }} --target DinosaurPlanetRecompiled -j $(nproc)
      - name: Prepare Archive
        run: |
          mv cmake-build/DinosaurPlanetRecompiled DinosaurPlanetRecompiled
          rm -rf assets/scss
          tar -czf DinosaurPlanetRecompiled.tar.gz DinosaurPlanetRecompiled assets/ gamecontrollerdb.txt
      - name: Archive DinoRecomp
        uses: actions/upload-artifact@v4
        with:
          name: DinosaurPlanetRecompiled-${{ runner.os }}-${{ matrix.type }}
          path: DinosaurPlanetRecompiled.tar.gz
  # Windows
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        type: [ RelWithDebInfo ]
    name: windows (${{ matrix.type }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
          submodules: recursive
      - name: Install Windows Dependencies
        run: |
          choco install ninja
      - name: Download portable LLVM
        run: |
          $ProgressPreference = 'SilentlyContinue'
          Invoke-WebRequest -Uri "https://github.com/llvm/llvm-project/releases/download/llvmorg-19.1.3/LLVM-19.1.3-Windows-X64.tar.xz" -OutFile "LLVM.tar.xz"
          New-Item -ItemType Directory -Path portable-llvm > $null
          7z x LLVM.tar.xz
          7z x LLVM.tar -oportable-llvm
      - name: Configure Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1
      - name: Checkout baserom
        uses: actions/checkout@v2
        with:
          repository: Francessco121/dino-recomp-private
          token: ${{ secrets.PRIVATE_REPO_PAT }}
          path: baserom
      - name: Extract baserom
        run: |
          Expand-Archive baserom\baserom.patched.z64.zip .\
      - name: Build N64Recomp & RSPRecomp
        run: |
          cd lib/N64Recomp

          set $env:PATH="$env:USERPROFILE/.cargo/bin;$env:PATH"
          $cpuCores = (Get-CimInstance -ClassName Win32_Processor).NumberOfLogicalProcessors

          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_MAKE_PROGRAM=ninja -G Ninja -S . -B cmake-build
          cmake --build cmake-build --config Release --target N64RecompCLI -j $cpuCores
          cmake --build cmake-build --config Release --target RSPRecomp -j $cpuCores

          # Copy N64Recomp & RSPRecomp to root directory
          cp cmake-build/N64Recomp.exe ../..
          cp cmake-build/RSPRecomp.exe ../..
      - name: Run N64Recomp & RSPRecomp
        run: |
          ./N64Recomp.exe dino.toml
          ./RSPRecomp.exe aspMain.toml
      - name: Build DinoRecomp
        run: |-
          set $env:PATH="$env:USERPROFILE/.cargo/bin;$env:PATH"
          $cpuCores = (Get-CimInstance -ClassName Win32_Processor).NumberOfLogicalProcessors

          # remove LLVM from PATH so it doesn't overshadow the one provided by VS
          $env:PATH = ($env:PATH -split ';' | Where-Object { $_ -ne 'C:\Program Files\LLVM\bin' }) -join ';'

          cmake -DCMAKE_BUILD_TYPE=${{ matrix.type }} -DCMAKE_CXX_COMPILER=clang-cl -DCMAKE_C_COMPILER=clang-cl -DCMAKE_MAKE_PROGRAM=ninja -DPATCHES_C_COMPILER="..\portable-llvm\LLVM-19.1.3-Windows-X64\bin\clang" -DPATCHES_LD="..\portable-llvm\LLVM-19.1.3-Windows-X64\bin\ld.lld" -G Ninja -S . -B cmake-build -DCMAKE_CXX_FLAGS="-Xclang -fexceptions -Xclang -fcxx-exceptions"
          cmake --build cmake-build --config ${{ matrix.type }} --target DinosaurPlanetRecompiled -j $cpuCores
      - name: Prepare Archive
        run: |
          Move-Item -Path "cmake-build/DinosaurPlanetRecompiled.exe" -Destination "DinosaurPlanetRecompiled.exe"
          Move-Item -Path "cmake-build/dxcompiler.dll" -Destination "dxcompiler.dll"
          Move-Item -Path "cmake-build/dxil.dll" -Destination "dxil.dll"
          Move-Item -Path "cmake-build/SDL2.dll" -Destination "SDL2.dll"
          Move-Item -Path "cmake-build/DinosaurPlanetRecompiled.pdb" -Destination "DinosaurPlanetRecompiled.pdb"
          Remove-Item -Path "assets/scss" -Recurse -Force
      - name: Archive DinoRecomp
        uses: actions/upload-artifact@v4
        with:
          name: DinosaurPlanetRecompiled-${{ runner.os }}-${{ matrix.type }}
          path: |
            DinosaurPlanetRecompiled.exe
            dxcompiler.dll
            dxil.dll
            SDL2.dll
            assets/
            gamecontrollerdb.txt
      - name: Archive Debug Files
        uses: actions/upload-artifact@v4
        with:
          name: DinosaurPlanetRecompiled-PDB-${{ matrix.type }}
          path: |
            DinosaurPlanetRecompiled.pdb
