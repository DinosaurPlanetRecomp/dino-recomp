# Config file for Dinosaur Planet Recompilation.

[input]
entrypoint = 0x80000400
# Paths are relative to the location of this config file.
output_func_path = "RecompiledFuncs"
rom_file_path = "baserom.z64"
symbols_file_path = "dino.syms.toml"
relocatable_sections_path = "dino.dlls.txt"

[patches]
stubs = [
    "test_write",
    "check_dongle",
]

ignored = [
    "__osMakeMotorData",
    # unused problematic funcs
    "func_80011588",
    "func_80011490",
    "NOTosContSetch",
    "set_osPIHandle_Addr_to_0xa800000",
    "some_dma_func",
    "osEPi_WriteRead",
    "func_8005EE8C",
    "func_8005EFA8",
    "func_8005F1A0",
    "func_8005EE20",
    "func_8005F0D4",
    "func_8005F2A4"
]

[[patches.hook]]
func = "dll_31_func_4DC"
text = "osFlashInit_recomp(rdram, ctx); return;"

[[patches.hook]]
func = "dll_31_func_640"
text = "osFlashReadId_recomp(rdram, ctx); return;"

[[patches.hook]]
func = "dll_31_func_820"
text = "osFlashClearStatus_recomp(rdram, ctx); return;"

[[patches.hook]]
func = "dll_31_func_88C"
text = "osFlashSectorErase_recomp(rdram, ctx); return;"

[[patches.hook]]
func = "dll_31_func_9A4"
text = "osFlashWriteBuffer_recomp(rdram, ctx); return;"

[[patches.hook]]
func = "dll_31_func_A50"
text = "osFlashWriteArray_recomp(rdram, ctx); return;"

[[patches.hook]]
func = "dll_31_func_B48"
text = "osFlashReadArray_recomp(rdram, ctx); return;"

## Commit some sins to get 0x8001B4F0-0x8001C8D4 to recompile...
# $ra is saved in $t9 because functions called before it don't correctly save $ra to the stack,
# this is not relevant since we just want to recognize this as a return statement, so override it
[[patches.instruction]]
vram = 0x8001ba28
func = "func_8001B6F0"
value = 0x03e00008  # jr $t9 -> jr $ra

# There's a function pointer table at 0x80090444 that's never written to and only has one valid
# branch. Just convert it to a jump to that one branch so recomp can reason about it.
[[patches.instruction]]
vram = 0x8001c8b0
func = "func_8001C8A0"
value = 0x0800722e # jr $s1 -> j 0x8001c8b8
